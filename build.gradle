plugins {
	id "java"
	id "org.sonarqube" version "3.3"
	id "com.diffplug.spotless" version "6.1.0"
	id "jacoco"
}

defaultTasks 'clean', 'spotlessApply', 'build'

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}


configurations {
	aws
	dynamodb
	jackson
	lambda
	sqs
	kms
	lambda_tests
	nimbus
	tests
	test_runtime
	powertools
	mockito
}

// The dynamodb enhanced package loads the apache-client as well as the spi-client, so
// we need to add the apache-client to the dependencies exclusion to not get a mismatch
configurations.all {
	exclude group:"software.amazon.awssdk", module: "apache-client"
}

dependencies {
	aws platform('software.amazon.awssdk:bom:2.17.233')

	dynamodb "software.amazon.awssdk:dynamodb",
			"software.amazon.awssdk:dynamodb-enhanced"

	sqs "software.amazon.awssdk:sqs"

	kms "software.amazon.awssdk:kms"

	lambda "software.amazon.awssdk:lambda",
			"com.amazonaws:aws-lambda-java-events:3.11.0",
			"software.amazon.lambda:powertools-parameters:1.12.3"

	lambda_tests "software.amazon.awssdk:aws-lambda-java-tests"

	jackson "com.fasterxml.jackson.core:jackson-core:2.13.3",
			"com.fasterxml.jackson.core:jackson-databind:2.13.3",
			"com.fasterxml.jackson.core:jackson-annotations:2.13.3",
			"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3",
			"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.3"

	powertools "software.amazon.lambda:powertools-logging:1.12.3",
			"software.amazon.lambda:powertools-metrics:1.12.3"

	nimbus "com.nimbusds:oauth2-oidc-sdk:9.38.1",
			"com.nimbusds:nimbus-jose-jwt:9.23"

	tests "org.junit.jupiter:junit-jupiter-api:5.8.2",
			"org.junit.jupiter:junit-jupiter-params:5.8.2",
			"org.mockito:mockito-junit-jupiter:4.3.1",
			"org.mockito:mockito-inline:4.3.1",
			"org.hamcrest:hamcrest:2.2"

	test_runtime "org.junit.jupiter:junit-jupiter-engine:5.8.2"
}

dependencies {

	implementation configurations.aws,
			configurations.lambda,
			configurations.jackson,
			configurations.dynamodb,
			configurations.nimbus,
			configurations.powertools,
			configurations.sqs,
			configurations.kms

	testImplementation configurations.tests

	testRuntimeOnly configurations.test_runtime
}

tasks.named("jar") {
	manifest {
		attributes("Implementation-Title": project.name,
		"Implementation-Version": project.version)
	}
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

build.finalizedBy(buildZip)

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "alphagov_di-ipv-cri-lib"
		property "sonar.organization", "alphagov"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked"
	}
}
